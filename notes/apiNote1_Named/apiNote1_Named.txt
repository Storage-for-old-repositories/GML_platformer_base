

-- ###################################################################################################################################################################################################################### --
-- ###################################################################################################################################################################################################################### --
[IDEA]

	- создать стиль написания кода, а так же правила разделяющие написание кодовой базы (api) от кода проекта.
	- причём гарантируя отсутствие пересечений между кодовой базой (api), стандартным api, и кодом проекта (в большинстве случаев).

-- ###################################################################################################################################################################################################################### --
-- ###################################################################################################################################################################################################################### --
[GENERAL]

-- ########################################################################################## --
# skip-имя

	- имя, которое ни как не используется
	[_0, _1, _2, _n...]
	catch(_0)
	funct(_0, _1, name) - вызов функции

	-- ############################## --
	# именна ресурсов
	- префиксы, которые зарезервированны под имена ресурсов
	[spr, snd, obj, scr, seq, shad, room, ext, path, note, timeline, tileset, font, curve, incl, tag]

	- example:
	sprRedPlayer
	scrWindowAdapt

-- ########################################################################################## --
# именнование локальных переменных (self.публичные) и функций

	- style: camelCase
	- обязательно с использованием явного self.
	- не рекомендуется использовать built-in имена

	- example:
	self.helloWorld
	self.thisName
	function helloWorld()
	function thisName()

	При использование variable_struct_get, variable_struct_set, variable_instance_get, variable_instance_set
	Допускается использовании любого стиля именнование, но без __ в префикса имени

-- ########################################################################################## --
# именнование локальных переменных (self.приватные) и функций

	- style: camelCase
	- обязательно с использованием явного self.

	- example:
	self.__helloWorld
	self.__thisName
	function __helloWorld()
	function __thisName()

-- ########################################################################################## --
# именнование глобальных переменных (global.публичные)

	- style: camelCase
	- не рекомендуется использовать built-in имена
	- не рекомендуется использовать имена функций (пользовательских)

	- example:
	global.helloWorld
	global.thisName

	При использовании variable_global_get, variable_global_set
	Допускается использование любого стиля именнование, но без __ в префикса имени

-- ########################################################################################## --
# именнование глобальных переменных (global.приватные)

	- style: camelCase
	- не рекомендуется использовать имена функций (пользовательских)

	- example:
	global.__helloWorld
	global.__thisName

	# использование конструкторов (constructor)
	- style: PascalCase

	- example:
	function Integer() constructor
	function Tween() constructor

	Для полей static в конструкторах и функций допускается использование:
	static thisName
	static _thisName
	static __thisName

-- ########################################################################################## --
# именнование глобальных переменных (всегда публичные)

	- style: PascalCase
	- не рекомендуется использовать (предпочтение PascalCase для констукторов)

	- example:
	globalvar HelloWorld
	globalvar ThisName

	При использовании variable_global_get, variable_global_set
	Допускается использование любого стиля именнование, но без __ в префикса имени

-- ########################################################################################## --
# именнование enum (всегда публичные)

	- style: MACRO_CASE

	- example: 
	enum HELLO_WORLD {HELLO, WORLD}
	enum THIS_NAME {THIS, NAME}

-- ########################################################################################## --
# именнование макросов (всегда публичные)

	- style: MACRO_CASE

	- example:
	#macro HELLO_WORLD
	#macor THIS_NAME

-- ########################################################################################## --
# временные переменные (var)

	- style: camelCase
	- не рекомендуется использовать built-in имена

	- example:
	var _helloWorld;
	var _thisName;

-- ########################################################################################## --
# выделение сигнатуры функций и конструкторов

	- style: camelCase
	- публичная сигнатура и сигнатура объявление не обязаны совпадать
	- JDoc
	
	- example:
	/// @function name(arg0, [arg1], [arg2], [arg3])   // публичная сигнатура
	function name(_arg0, _arg1, _i="arg", _j)          // сигнатура объявление

-- ###################################################################################################################################################################################################################### --
-- ###################################################################################################################################################################################################################### --
[API]

-- ########################################################################################## --
# все имена api (кодовой базы) следуют выделять префиксом api в соответствующем стиле, за исключением:

	1. self.публичные
	2. self.приватные
	3. var
	4. аргументы сигнатуры функций

-- ########################################################################################## --
# стиль именнования ресурсов camelCase
# имена ресурсов api, так же выделяются этим префиксом

	- example:
	apiObjLoader
	apiScrLoader
	self.HelloWorld
	self.__HelloWorld
	global.apiHelloWorld
	global.__apiThisName
	globalvar ApiHelloWorld
	var _thisName
	enum ApiThisName {Hello, World}

-- ########################################################################################## --
	
	- обязательно соблюдения правил [GENERAL]
	- нельзя использовать имена функций для global.публичные и global.приватные
	- соблюдение правил описанных в apiNote3_Dev

-- ###################################################################################################################################################################################################################### --
-- ###################################################################################################################################################################################################################### --
[PROJECT]

	- запрещается использования префикса api в любых именнованиях
	- не обязательно соблюдения правил [GENERAL] (это может привести к проблемам)
	- обязательно использовать apiRoomLoader

-- ###################################################################################################################################################################################################################### --
-- ###################################################################################################################################################################################################################### --
[OTHER]
	
	- Использование snake_case остаётся не зарезервированным (и никогда не будет зарезервиванно)
	- Использование других префиксов (кроме api) остаётся не зарезервированным (и никогда не будет зарезервиванно)
